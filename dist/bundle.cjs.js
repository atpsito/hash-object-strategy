"use strict";var t=require("object-hash");const e=(t,e)=>{let o=e;for(const e of t)o=o[e];return o};var o=Object.defineProperty,r=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable,c=(t,e,r)=>e in t?o(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r;const s=(o,r)=>{var n;const i=Object.entries(r).filter((t=>"object"==typeof t[1])).map((t=>t[0])),c=Object.fromEntries(Object.entries(o).filter((t=>!i.includes(t[0])))),a={};for(const[i,l]of Object.entries(r)){if("id"===i&&"string"==typeof l){const t=l.split(".");a[i]=null!=(n=e(t,o))?n:l}"hash"===i&&l&&(a[i]=t(c)),"object"==typeof l&&l.parentHash&&(a[`${i}Hash`]=t(o[i])),Array.isArray(o[i])&&"object"==typeof l&&(a[i]=o[i].map((t=>s(t,l))))}return a},a=(t,e)=>{var o,r;let n={id:t.id,action:"none"};t&&!e&&(n={action:"create",id:t.id}),(null==t?void 0:t.hash)!==(null==e?void 0:e.hash)&&void 0!==(null==e?void 0:e.hash)&&(n={action:"update",id:t.id});const i=Object.entries(t);for(const[c,s]of i){if(!Array.isArray(s))continue;const i=`${c.toString()}Hash`;if(t[i]===(null==e?void 0:e[i])&&void 0!==t[i])continue;void 0===n[c]&&(n[c]=[]);const l=null==(o=null==e?void 0:e[c])?void 0:o.map((t=>t.id)),d=null==(r=null==t?void 0:t[c])?void 0:r.map((t=>t.id));for(const t of null!=l?l:[])(null==d?void 0:d.includes(t))||n[c].push({action:"delete",id:t});const u=null==s?void 0:s.map((t=>{var o;const r=null==(o=null==e?void 0:e[c])?void 0:o.find((e=>e.id===t.id));return a(t,r)}));n[c]=[...n[c],...u]}return n},l=(t,e,o)=>{const s=Object.entries(o).filter((t=>"object"==typeof t[1])).map((t=>t[0])),a=Object.fromEntries(Object.entries(t).filter((t=>!s.includes(t[0])))),d=((t,e)=>{for(var o in e||(e={}))n.call(e,o)&&c(t,o,e[o]);if(r)for(var o of r(e))i.call(e,o)&&c(t,o,e[o]);return t})({},e);"none"!==e.action&&(d.data=a);for(const[r,n]of Object.entries(e)){if(!Array.isArray(n))continue;const e=r,i=o[e];if(!i)continue;const c=n.map((o=>{const r=t[e].find((t=>t[i.id]===o.id));return r?l(r,o,i):o}));d[e]=c}return d};exports.compareHashes=a,exports.createHash=s,exports.getDataFromCompare=l;
//# sourceMappingURL=bundle.cjs.js.map
